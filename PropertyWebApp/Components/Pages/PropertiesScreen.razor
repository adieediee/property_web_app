@page "/properties"
@layout Layout.PrenajimatelLayout
@using Microsoft.EntityFrameworkCore
@using PropertyWebApp.Data
@using PropertyWebApp.Data.ViewModels
@inject AppDbContext DbContext

<div class="properties-container">
    @if (properties == null)
    {
        <p>Načítavam nehnuteľnosti...</p>
    }
    else if (!properties.Any())
    {
        <p>Žiadne nehnuteľnosti na zobrazenie.</p>
    }
    else
    {
        <div class="cards-grid">
            @foreach (var property in properties)
            {
                <div class="property-card">
                    <!-- Obrázok na pozadí -->
                    <div class="property-background" style="background-image: url('@property.MainImage')">
                        <!-- Informácie o nehnuteľnosti -->
                        <div class="property-info">
                            <h4>@property.PropertyName</h4>
                            <div class="tenant-info">
                                <img class="tenant-avatar" src="@property.TenantAvatar" alt="Tenant Avatar" />
                                <p>@property.TenantName</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<PropertyScreenViewModel> properties;

    protected override async Task OnInitializedAsync()
    {
        properties = await DbContext.Properties
            .Include(p => p.PropertyImages)
            //.Include(p => p.Rentals) // 
                //.ThenInclude(r => r.Tenant)
            
            
            .Select(p => new PropertyScreenViewModel
                {
                    PropertyId = p.PropertyId,
                    PropertyName = p.PropertyName,
                    MainImage = p.PropertyImages.FirstOrDefault() !=null ? p.PropertyImages.FirstOrDefault().ImagePath : "/img/default-placeholder-property.jpg",
                    TenantAvatar = "/img/default-avatar.jpg",
                    TenantName = "John Doe"
                })
            .ToListAsync();
    }
}
