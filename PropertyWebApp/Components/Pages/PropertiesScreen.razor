@page "/properties"
@layout Layout.PrenajimatelLayout
@using PropertyWebApp.Components.Pages.ViewModels
@using PropertyWebApp.Components.Reusable
@using PropertyWebApp.Models
@using PropertyWebApp.Models.Services
@using PropertyWebApp.Data.ViewModels
@using System.ComponentModel.DataAnnotations
@inject PropertyService PropertyService
@inject NavigationManager Navigation
@inject UserStateService UserStateService

@inject PropertyScreenViewModel ViewModel

@rendermode InteractiveServer

<Toolbar SearchPlaceholder="Hľadaj nehnuteľnosť..."
         AddButtonText="Pridať nehnuteľnosť"
         ShowAddButton="false"
         OnSearch="ViewModel.PerformPropertySearch"
         OnSettingsClick="OpenSettings" />


@if (ViewModel.Properties != null)
{
    <div class="flex h-screen ">
        <!-- zoznam karticiek --> 
        <div class="w-full  p-4">
            <div class="scroll">
            <div class="grid gap-4" style="grid-template-columns: repeat(auto-fit, minmax(20rem, max-content)); justify-content: start;">
                @foreach (var property in ViewModel.FilteredProperties)
                {
                    <div class="relative bg-white shadow-md rounded-2xl overflow-hidden cursor-pointer hover:shadow-lg transition-shadow duration-300 h-96 w-80 " @onclick="() => ViewModel.ShowPropertyDetails(property.PropertyId)">
                        <!-- obr property -->
                        <img class="w-full h-full object-cover" src="@property.MainImage" alt="Property Image">

                        <!-- obsah -->
                        <div class="absolute bottom-2 left-2 right-2 bg-white p-3 rounded-2xl">
                            <!-- nazov -->
                            <h4 class="text-sm font-semibold text-gray-800 leading-tight truncate">
                                @property.PropertyName
                            </h4>

                            <!-- info o najomcovi -->
                            <div class="flex items-center mt-2 text-sm text-gray-600">
                                <img class="w-6 h-6 rounded-full mr-2" src="@property.TenantAvatar" alt="Tenant Avatar">
                                <p class="truncate">@property.UserName</p>
                            </div>
                        </div>
                    </div>
                }
                <!-- pridat edit -->
                @if(UserStateService.Role == "Landlord") {
                <div class="flex justify-center items-center bg-gray-100 rounded-lg cursor-pointer h-40" @onclick="NavigateToAddProperty">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                    </svg>
                </div>
                }
                
            </div>
            </div>
        
        </div>
        <!-- prava strana detail -->
        @if (ViewModel.SelectedProperty != null)
        {
            <div class="hidden lg:block w-full h-max bg-white p-4 rounded-3xl m-4 relative">
                <!-- krizik -->
                <button class="absolute top-8 left-8 w-8 h-8 bg-white text-gray-800 rounded-full shadow-lg flex items-center justify-center hover:bg-gray-100"
                        @onclick="() => ViewModel.HidePropertyDetails()">
                    <span class="text-xl font-bold">&times;</span>
                </button>

                <img class="w-full h-64 object-cover rounded-2xl mb-4" src="@ViewModel.SelectedProperty.MainImage" alt="Property Image">
                <h2 class="text-xl font-bold text-gray-800">@ViewModel.SelectedProperty.PropertyName</h2>
                <p class="mt-2 text-gray-600">@ViewModel.SelectedProperty.Description</p>
                <div class="grid grid-cols-2 gap-4 mt-4">
                    <p><strong>Počet spální:</strong> @ViewModel.SelectedProperty.NumberOfBedrooms</p>
                    <p><strong>Počet kúpeľní:</strong> @ViewModel.SelectedProperty.NumberOfBathrooms</p>
                    <p><strong>Rozloha:</strong> @ViewModel.SelectedProperty.Area m²</p>
                    <p><strong>Cena:</strong> @ViewModel.SelectedProperty.Price €</p>
                </div>
                <div class="flex items-center gap-4 mt-6">
                    @if (UserStateService.Role == "Landlord")
                    {
                        <button class="px-4 py-2 bg-blue-500 text-white rounded-lg" @onclick="() => EditProperty()">Edit</button>
                        <button class="px-4 py-2 bg-red-500 text-white rounded-lg" @onclick="() => ViewModel.ShowDeleteConfirmation()">Delete</button>
                    }
                </div>
            </div>
        }
        @if (ViewModel.showDeleteConfirmation)
        {
            <div class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
                <div class="bg-white rounded-lg shadow-lg p-6 w-80">
                    <h2 class="text-lg font-semibold text-gray-800">Potvrdenie</h2>
                    <p class="text-sm text-gray-600 mt-2">Naozaj chcete túto položku vymazať?</p>
                    <div class="flex items-center justify-end mt-4">
                        <button class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300"
                                @onclick="ViewModel.CancelDelete">
                            Zrušiť
                        </button>
                        <button class="ml-2 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600"
                                @onclick="ViewModel.ConfirmDelete">
                            Vymazať
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitializeAsync();
    }

    private void NavigateToAddProperty()
    {
        Navigation.NavigateTo($"/edit-property/");
    }

    private void OpenSettings()
    {
        // TODO
    }

    private string GetAddButtonLink()
    {
        if(UserStateService.Role == "Landlord")
        {
            return "/edit-property";
        } else
        {
            //TODO redirect to add landlord
            return "/";
        }

    }

    public void EditProperty()
    {
        if(UserStateService.Role == "Landlord")
        {
            if (ViewModel.SelectedProperty != null)
            {
                Navigation.NavigateTo($"/edit-property/{ViewModel.SelectedProperty.PropertyId}");
            }
        } else
        {
            //TODO redirect to add landlord
        }
    }

    
}
