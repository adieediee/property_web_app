@page "/add-issue"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.EntityFrameworkCore
@using PropertyWebApp.Data
@using PropertyWebApp.Models
@inject AppDbContext DbContext
@inject NavigationManager Navigation

@rendermode InteractiveServer

<div class="upload-container">
    <!-- Form Section -->
    <EditForm Model="newIssue" OnValidSubmit="HandleValidSubmit" FormName="AddIssueForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <!-- Issue Fields -->
        <div class="form-section">
            <h3>Pridať novú poruchu</h3>

            <div class="form-group">
                <label for="title">Názov poruchy</label>
                <InputText id="title" class="styled-input" placeholder="Zadaj názov poruchy" @bind-Value="newIssue.Title" />
                <ValidationMessage For="() => newIssue.Title" />
            </div>

            <div class="form-group">
                <label for="description">Popis poruchy</label>
                <InputTextArea id="description" class="styled-input desc" placeholder="Zadaj popis poruchy" @bind-Value="newIssue.Description" />
            </div>

            <div class="form-group">
                <label for="rentalId">ID Nájmu (RentalId)</label>
                <InputNumber id="rentalId" class="styled-input" placeholder="Zadaj ID nájmu" @bind-Value="newIssue.RentalId" />
                <ValidationMessage For="() => newIssue.RentalId" />
            </div>

            <div class="actions">
                <button class="btn-back" @onclick="NavigateBack">Zrušiť</button>
                <button type="submit" class="btn-next">Pridať</button>
            </div>
        </div>
        <!-- File Upload Section -->
        <div class="upload-section">
            <div class="upload-header">
                <h3>Nahrať súbory pre poruchu</h3>
                <p>Maximálna veľkosť súboru: 512 KB</p>
                <p>Podporované formáty: JPEG, PNG</p>
            </div>

            <!-- Drop Zone -->
            <div class="upload-dropzone">
                <label class="upload-label" for="file-upload">
                    <i class="icon-upload"></i>
                    Presuňte súbory alebo <span class="upload-link">preklikajte</span> sem
                    <InputFile id="file-upload" OnChange="HandleFileSelected" multiple />
                </label>
            </div>

            <!-- Uploaded Files -->
            <div class="uploaded-files">
                @if (uploadedFiles.Any())
                {
                    @foreach (var file in uploadedFiles)
                    {
                        <div class="uploaded-file">
                            <p>@file.Name - @(file.Size / 1024) KB</p>
                            <button class="btn-remove" @onclick="() => RemoveFile(file)">X</button>
                        </div>
                    }
                }
            </div>

            <!-- Error Message -->
            @if (fileUploadError != null)
            {
                <div class="alert alert-danger">
                    @fileUploadError
                </div>
            }
        </div>
    </EditForm>
</div>

@code {
    private Issue newIssue = new Issue();
    private List<IBrowserFile> uploadedFiles = new List<IBrowserFile>();
    private string? fileUploadError; // Ukladá chybovú správu
    private const long MaxFileSize = 512 * 1024; // 512 KB

    protected override async Task OnInitializedAsync()
    {
        // Dynamicky nastaví ID statusu "Rieši sa"
        var status = await DbContext.IssueStatus.FirstOrDefaultAsync(s => s.StatusName == "Rieši sa");
        newIssue.StatusId = status?.StatusId ?? 1; // Predpokladáme, že ID statusu "Rieši sa" je 1
        newIssue.ReportDate = DateTime.Now;
        newIssue.PropertyId = 1; //TESTOVANIE
    }

   
    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var uploadsFolder = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "uploads");
        if (!Directory.Exists(uploadsFolder))
        {
            Directory.CreateDirectory(uploadsFolder);
        }
        fileUploadError = null;
        var files = e.GetMultipleFiles();

        foreach (var file in files)
        {
            if (file.Size > MaxFileSize)
            {
                fileUploadError = $"Súbor {file.Name} prekračuje maximálnu veľkosť 512 KB.";
                continue;
            }

            try
            {
                using var stream = file.OpenReadStream(MaxFileSize); // Explicitné nastavenie limitu
                uploadedFiles.Add(file);
            }
            catch (IOException ex)
            {
                fileUploadError = $"Nahrávanie súboru {file.Name} zlyhalo: {ex.Message}";
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        // Skontroluje či zadaný RentalId existuje
        var rentalExists = await DbContext.Rentals.AnyAsync(r => r.RentalId == newIssue.RentalId);
        if (!rentalExists)
        {
            fileUploadError = "Zadané ID nájmu neexistuje.";
            return;
        }

        // Uloženie poruchy
        await DbContext.Issues.AddAsync(newIssue);
        await DbContext.SaveChangesAsync();

        // Vytvor priečinok na nahrávanie súborov, ak neexistuje
        var uploadsFolder = Path.Combine("wwwroot", "uploads");
        if (!Directory.Exists(uploadsFolder))
        {
            Directory.CreateDirectory(uploadsFolder);
        }

        // Uloženie obrázkov
        foreach (var file in uploadedFiles)
        {
            try
            {
                var filePath = Path.Combine(uploadsFolder, file.Name);
                await using var fileStream = new FileStream(filePath, FileMode.Create);
                await file.OpenReadStream(MaxFileSize).CopyToAsync(fileStream);

                var issueImage = new IssueImage
                    {
                        IssueId = newIssue.IssueId,
                        ImagePath = $"/uploads/{file.Name}"
                    };

                await DbContext.IssueImages.AddAsync(issueImage);
            }
            catch (Exception ex)
            {
                fileUploadError = $"Nahrávanie súboru {file.Name} zlyhalo: {ex.Message}";
            }
        }

        await DbContext.SaveChangesAsync();

        // Presmerovanie na obrazovku s poruchami
        Navigation.NavigateTo("/propertyScreen");
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/propertyScreen");
    }

    private void RemoveFile(IBrowserFile file)
    {
        uploadedFiles.Remove(file);
    }
}
