@page "/edit-issue/{IssueId:int?}"

@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.EntityFrameworkCore
@using PropertyWebApp.Components.Pages.ViewModels
@using PropertyWebApp.Data
@using PropertyWebApp.Data.ViewModels
@using PropertyWebApp.Models
@using PropertyWebApp.Models.Services
@using System.ComponentModel.DataAnnotations

@inject EditIssueViewModel ViewModel
@inject NavigationManager Navigation

@rendermode InteractiveServer

<div class="upload-container">
    <EditForm Model="@ViewModel.NewIssue" OnValidSubmit="@ViewModel.HandleValidSubmitAsync">
        <DataAnnotationsValidator />

        <div class="form-section">
            <h3>@(ViewModel.NewIssue.IssueId > 0 ? "Upraviť poruchu" : "Pridať novú poruchu")</h3>

            <!-- Názov poruchy -->
            <div class="form-group">
                <label for="title">Názov poruchy</label>
                <InputText id="title" class="styled-input" placeholder="Zadaj názov poruchy" @bind-Value="@ViewModel.NewIssue.Title" />
                <ValidationMessage For="@(() => ViewModel.NewIssue.Title)" />
            </div>

            <!-- Popis poruchy -->
            <div class="form-group">
                <label for="description">Popis poruchy</label>
                <InputTextArea id="description" class="styled-input desc" placeholder="Zadaj popis poruchy" @bind-Value="@ViewModel.NewIssue.Description" />
                <ValidationMessage For="@(() => ViewModel.NewIssue.Description)" />
            </div>

            <!-- Výber nehnuteľnosti -->
            <div class="form-group">
                <label for="rentalId" class="block text-sm font-medium text-gray-700 mb-2">Vyber nehnuteľnosť</label>
                <div class="relative">
                    <!-- Dropdown Button -->
                    <button type="button" class="w-full bg-white border border-gray-300 rounded-full shadow-sm pl-3 pr-10 py-2 text-left cursor-pointer focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
                            @onclick="ViewModel.ToggleDropdown">
                        <div class="flex items-center">
                            @if (ViewModel.SelectedProperty != null)
                            {
                                <img src="@ViewModel.SelectedProperty.PropertyImages.FirstOrDefault()?.ImagePath" alt="Property Image" class="w-8 h-8 rounded-full object-cover mr-3" />
                                <span class="text-gray-700">@ViewModel.SelectedProperty.PropertyName</span>
                            }
                            else
                            {
                                <span class="text-gray-400">Vyber nehnuteľnosť</span>
                            }
                        </div>
                    </button>

                    <!-- Dropdown Menu -->
                    @if (ViewModel.IsDropdownOpen)
                    {
                        <div class="absolute mt-2 w-full bg-white rounded-md shadow-lg max-h-60 overflow-y-auto z-50 border border-gray-300">
                            @foreach (var property in ViewModel.AvailableProperties)
                            {
                                <div class="flex items-center p-2 hover:bg-gray-100 cursor-pointer"
                                     @onclick="() => ViewModel.SelectProperty(property)">
                                    <img src="@property.PropertyImages.FirstOrDefault()?.ImagePath" alt="Property Image" class="w-8 h-8 rounded-full object-cover mr-3" />
                                    <span class="text-gray-700">@property.PropertyName</span>
                                </div>
                            }
                        </div>
                    }
                </div>
                <ValidationMessage For="@(() => ViewModel.NewIssue.RentalId)" class="text-red-500 text-sm mt-1" />
            </div>
            <!-- issues -->
            <div class="form-group">
                <label for="tags" class="block text-sm font-medium text-gray-700 mb-2">Vyberte značky</label>
                <div class="flex flex-wrap gap-2">
                    @foreach (var tag in ViewModel.AvailableTags)
                    {
                        <button type="button"
                                class="px-3 py-1 rounded-full border border-gray-300 transition-colors duration-200
                           @((ViewModel.SelectedTags.Contains(tag)) ? "bg-blue-500 text-white" : "bg-gray-200 text-gray-700")"
                                @onclick="() => ViewModel.ToggleTag(tag)">
                            @tag.TagName
                        </button>
                    }
                </div>
            </div>

            <!-- Akcie -->
            <div class="actions">
                <button class="btn-back" @onclick="NavigateBack">Zrušiť</button>
                <button type="submit" class="btn-next" onclick="">@((IssueId.HasValue) ? "Uložiť" : "Pridať")</button>
            </div>
        </div>
       

        <!-- Sekcia na nahrávanie súborov -->
        <div class="upload-section">
            <h3>Nahrať súbory pre poruchu</h3>
            <div class="upload-dropzone">
                <label class="upload-label" for="file-upload">
                    <i class="icon-upload"></i>
                    Presuňte súbory alebo <span class="upload-link">preklikajte</span> sem
                    <InputFile id="file-upload" OnChange="ViewModel.HandleFileSelected" multiple />
                </label>
            </div>

            <div class="uploaded-files">
                @foreach (var file in ViewModel.UploadedFiles)
                {
                    <div class="uploaded-file">
                        <p>@file.Name - @(file.Size / 1024) KB</p>
                        <button class="btn-remove" @onclick="() => ViewModel.UploadedFiles.Remove(file)">X</button>
                    </div>
                }
            </div>

            @if (ViewModel.FileUploadError != null)
            {
                <div class="alert alert-danger">@ViewModel.FileUploadError</div>
            }
        </div>
    </EditForm>
</div>
@code {


    [Parameter] public int? IssueId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitializeAsync(IssueId);
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/issues-screen");
    }

}
