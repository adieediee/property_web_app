@page "/"
@using Microsoft.AspNetCore.Identity
@using PropertyWebApp.Models
@using PropertyWebApp.Models.Services
@layout Layout.HomeLayout
@inject UserStateService userStateService
@inject PropertyService PropertyService
@inject IJSRuntime JSRuntime

@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<div class="home-body">
    <div class="home-page">
        <h1 class="hero-nadpis">
            Nájdite Svoj Domov
            Jednoducho A Rýchlo
        </h1>
        <p class="hero-podtext" >Sed elit urna, imperdiet eget bibendum quis, convallis non massa.</p>

        <div class="search-bar">
            <input type="text" placeholder="Lokalita napr. Žilina" class="w-full px-4 py-2 border rounded-md"
                   @bind="SearchLocation" />
            <select class="property-type-search w-full px-4 py-2 border rounded-md" @bind="SearchType">
                <option value="">Vyber typ nehnuteľnosti</option>
                @if(PropertyTypes != null){
                @foreach (var type in PropertyTypes)
                {
                    <option value="@type.TypeName">@type.TypeName</option>
                }
                }
               
            </select>
            <input type="text" placeholder="Cena" class="w-full px-4 py-2 border rounded-md" @bind="SearchPrice" />
            <input type="submit" value="Vyhľadať" class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700"
                   @onclick="HandleSearch" >
                   </input>
        </div>

        <div class="popular-searches">
            <span>Obľúbené Vyhľadávania: </span>
            <a href="#" >Bratislava, Byt</a>
            <a href="#">Bratislava, Dom</a>
            <a href="#" >Žilina, Byt</a>
        </div>
    </div>

    <div class="min-h-screen bg-white p-6 pr-10 pl-10" id="resultSection">
        <!-- Property Grid -->
        <div class="container mx-auto mt-6">
            @if (AvailableProperties == null)
            {
                <p>Loading properties...</p>
            }
            else if (!AvailableProperties.Any())
            {
                <p>No properties found.</p>
            }
            else
            {
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                    @foreach (var property in AvailableProperties)
                    {
                        <div class="bg-white overflow-hidden" @onclick="Test">
                            <img src="@property.PropertyImages.FirstOrDefault().ImagePath" alt="Property Image" class="w-full h-64 object-cover rounded-xl">
                            <div class="mt-2">
                                <div class="flex justify-between">
                                    <h3 class="text-lg font-semibold text-gray-800">@property.PropertyName</h3>
                                    <h3 class="text-lg font-semibold text-gray-800">@property.Price €</h3>
                                </div>
                                <p class="text-gray-600">@property.City, @property.Country</p>
                                <div class="flex items-center space-x-6 mt-2">
                                    <div class="flex items-center text-sm text-gray-500 space-x-2">
                                        <div class="flex rounded-md outline outline-offset-2 outline-1 gap-2 p-2">
                                            <img src="/img/icons/area.png" class="w-6 h-6" />
                                            <p class="text-lg">@property.Area m²</p>
                                        </div>
                                        <div class="flex rounded-md outline-2 outline-blue-500 gap-2 p-2">
                                            <img src="/img/icons/bed.png" class="w-6 h-6" />
                                            <p class="text-lg">@property.NumberOfBedrooms</p>
                                        </div>
                                        <div class="flex rounded-md outline-2 outline-blue-500 gap-2 p-2">
                                            <img src="/img/icons/bath.png" class="w-6 h-6" />
                                            <p class="text-lg">@property.NumberOfBathrooms</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Property> AvailableProperties;
    private List<PropertyType> PropertyTypes;
    private string SearchLocation { get; set; }
    private string SearchType { get; set; }
    private string SearchPrice { get; set; }
    private ElementReference ResultRef;

    protected override async Task OnInitializedAsync()
    {
        // Načítanie typov nehnuteľností a dostupných nehnuteľností
        PropertyTypes = await PropertyService.GetPropertyTypesAsync();
        AvailableProperties = await PropertyService.GetAvailablePropertiesAsync();
    }

    private async Task HandleSearch()
    {
        // Konverzia ceny na decimal
        decimal.TryParse(SearchPrice, out var maxPrice);

        // Zavolaj funkciu vyhľadávania a aktualizuj zoznam dostupných nehnuteľností
        AvailableProperties = await PropertyService.SearchPropertiesAsync(SearchLocation, SearchType, maxPrice);
        await JSRuntime.InvokeVoidAsync("scrollToElement", "resultSection");
        StateHasChanged();
    }


    private async Task HandlePopularSearch(string location, string type)
    {
        SearchLocation = location;
        SearchType = type;

        AvailableProperties = await PropertyService.SearchPropertiesAsync(location, type, null);
    }
    private void Test()
    {
        Console.WriteLine("Test");
    }
}
