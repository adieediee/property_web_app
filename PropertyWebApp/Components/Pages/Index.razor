@page "/"
@using Microsoft.AspNetCore.Identity

@using PropertyWebApp.Models
@using PropertyWebApp.Models.Services
@layout Layout.HomeLayout
@inject UserStateService userStateService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<IdentityUser> UserManager
@inject PropertyService PropertyService
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>
<body class="home-body">
    <div>
        <AuthorizeView>
            <Authorized>
                <p> Hello authorized @userStateService.UserName</p>
            </Authorized>
            <NotAuthorized> Hello not authorized</NotAuthorized>
        </AuthorizeView>

    </div>
    <div class="home-page">
        <h1 class="hero-nadpis">
            Nájdite Svoj Domov
            Jednoducho A Rýchlo
        </h1>
        <p class="hero-podtext">Sed elit urna, imperdiet eget bibendum quis, convallis non massa.</p>

        <div class="search-bar">
            <input type="text" placeholder="Lokalita napr. Žilina">
            <select class="property-type-search">
                <option value="">Vyber typ nehnuteľnosti</option>
                <option value="byt">Byt</option>
                <option value="dom">Dom</option>
            </select>
            <input type="text" placeholder="Cena">
            <input type="submit" value="Vyhľadať">
        </div>

        <div class="popular-searches">
            <span>Obľúbené Vyhľadávania: </span>
            <a href="#">Bratislava, Byt</a>
            <a href="#">Bratislava, Dom</a>
            <a href="#">Žilina, Byt</a>
        </div>
    </div>

  
    <div class="min-h-screen bg-white">
        <!-- Filters -->
        <div class="flex flex-wrap items-center gap-4 bg-white p-4 rounded-lg">
            <div>
                <label class="text-sm text-gray-600">Looking For</label>
                <input type="text" placeholder="Residence in Yogyakarta" class="w-full px-4 py-2 border rounded-md">
            </div>
            <div>
                <label class="text-sm text-gray-600">Type</label>
                <select class="w-full px-4 py-2 border rounded-md">
                    <option>Residence</option>
                    <option>Apartment</option>
                    <option>Villa</option>
                </select>
            </div>
            <div>
                <label class="text-sm text-gray-600">Price</label>
                <input type="text" placeholder="$1,000 - $50,000" class="w-full px-4 py-2 border rounded-md">
            </div>
            <div>
                <label class="text-sm text-gray-600">Location</label>
                <input type="text" placeholder="Indonesia" class="w-full px-4 py-2 border rounded-md">
            </div>
            <div class="ml-auto">
                <button class="flex items-center space-x-2 px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700">
                    <span>Filter</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6h4M6 12h12M8 18h8" />
                    </svg>
                </button>
            </div>
        </div>

        <!-- Property Grid -->
        <div class="container mx-auto px-4 mt-6">
            @if (AvailableProperties == null)
            {
                <p>Loading properties...</p>
            }
            else if (!AvailableProperties.Any())
            {
                <p>No properties found.</p>
            }
            else
            {
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                    @foreach (var property in AvailableProperties)
                    {
                        <div class="bg-white rounded-lg overflow-hidden ">
                            <img src="@property.PropertyImages.FirstOrDefault().ImagePath" alt="Property Image" class="w-full h-48 object-cover rounded-3xl">
                            <div class="mt-2">
                                <div class="flex justify-between">
                                    <h3 class="text-lg font-semibold text-gray-800">@property.PropertyName</h3>
                                    <h3 class="text-lg font-semibold text-gray-800">@property.Price €</h3>
                                </div>
                                <p class="text-gray-600">@property.City, @property.Country</p>
                                <div class="flex items-center space-x-6 mt-2">
                                    <div class="flex items-center text-sm text-gray-500 space-x-2">
                                        <!-- TODO outline  -->
                                        <div class="flex rounded-md outline outline-offset-2 outline-1 gap-2 p-2">
                                            <img src="/img/icons/area.png" class="w-6 h-6" />
                                            <p class="text-lg">@property.Area m²</p>
                                        </div>
                                        <div class="flex rounded-md outline-2 outline-blue-500 gap-2 p-2">
                                            <img src="/img/icons/bed.png" class="w-6 h-6" />
                                            <p class="text-lg">@property.NumberOfBedrooms</p>
                                        </div>
                                        <div class="flex rounded-md outline-2 outline-blue-500 gap-2 p-2">
                                            <img src="/img/icons/bath.png" class="w-6 h-6" />
                                            <p class="text-lg">@property.NumberOfBathrooms</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</body>



@code {
    private List<Property> AvailableProperties;

    protected override async Task OnInitializedAsync()
    {
        // Načítanie dostupných nehnuteľností z PropertyService
        AvailableProperties = await PropertyService.GetAvailablePropertiesAsync();
    }

    
    


}
