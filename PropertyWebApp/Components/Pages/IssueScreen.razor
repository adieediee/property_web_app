@using Microsoft.EntityFrameworkCore
@using PropertyWebApp.Data
@using PropertyWebApp.Models
@page "/propertyScreen"
@rendermode InteractiveServer
@layout Layout.PrenajimatelLayout




<div class="toolbar">
    <button class="circle-btn">
        <i class="icon-filter"></i>
    </button>

    <div class="search-container">
        <input type="text" placeholder="Search Anything..." class="search-input" />
        <button class="search-btn">
            <i class="icon-search"></i>
        </button>
    </div>
    
    <a href="/add-issue" class="circle-btn add">
            <i class="icon-add"></i>
        </a>
    
    
</div>



@if (issues == null)
{
    <p>Načítavam údaje...</p>
}
else if (!issues.Any())
{
    <p>Žiadne poruchy na zobrazenie.</p>
}
else
{
    <div class="list-container">
        @foreach (var issue in issues)
        {
            <div class="card">
                <!-- Ľavá časť: obrázok a texty -->
                <div class="card-left">
                    <img class="property-image" src="/img/placeholder.png" alt="Property Image" />
                    <div class="card-text">
                        <h4 class="issue-title">Pokazené kúrenie</h4>
                        <p class="issue-subtitle">Názov Nehnuteľnosti</p>
                    </div>
                </div>

                <!-- Stredná časť: dátum, tagy, cena -->
                <div class="card-center">
                    <p class="issue-date">26/11/2024</p>
                    <div class="tags">
                        <span class="tag">Kuchyňa</span>
                        <span class="tag">Kúpeľňa</span>
                        <span class="tag">Obývačka</span>
                    </div>
                    <p class="issue-cost">50.00 €</p>
                </div>

                <!-- Pravá časť: stav a menu -->
                <div class="card-right">
                    <span class="status">Rieši sa</span>
                    <button class="menu-btn">⋮</button>
                </div>
            </div>

        }
    </div>

}

@code {
    private List<Issue> issues;
    private int? expandedIssueId;

    @inject AppDbContext DbContext;

    protected override async Task OnInitializedAsync()
    {
        // Načítanie porúch vrátane obrázkov a stavu
        issues = await DbContext.Issues
            .Include(i => i.Images)
            .Include(i => i.Status)
            .ToListAsync();
    }

    public void EditIssue(int issueId)
    {
        // Logika pre úpravu poruchy
        Console.WriteLine($"Editing issue: {issueId}");
    }

    public void DeleteIssue(int issueId)
    {
        // Logika pre vymazanie poruchy
        Console.WriteLine($"Deleting issue: {issueId}");
    }
}
