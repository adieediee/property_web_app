@page "/register"
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager Navigation
@inject RoleManager<IdentityRole> RoleManager
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

<PageTitle>Registrácia</PageTitle>

<section class="bg-white dark:bg-gray-900">
    <div class="flex justify-center min-h-screen">
        <div class="hidden bg-cover lg:block lg:w-2/5" style="background-image: url('https://images.unsplash.com/photo-1494621930069-4fd4b2e24a11?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=715&q=80')">
        </div>

        <div class="flex items-center w-full max-w-3xl p-8 mx-auto lg:px-12 lg:w-3/5">
            <div class="w-full">
                <h1 class="text-2xl font-semibold tracking-wider text-gray-800 capitalize dark:text-white">
                    Vytvor si účet zadarmo.
                </h1>

                <p class="mt-4 text-gray-500 dark:text-gray-400">
                    Zaregistrujte sa a vyplňte svoje údaje pre prístup k platforme.
                </p>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="p-4 mt-4 text-sm text-red-800 bg-red-50 dark:bg-gray-800 dark:text-red-400 rounded-lg">
                        @errorMessage
                    </div>
                }
                <!-- Výber role -->
                <div class="mt-6">
                    <h1 class="text-gray-500 dark:text-gray-300">Vyberte typ účtu</h1>

                    <div class="mt-3 md:flex md:items-center md:-mx-2">
                        <button type="button"
                                class="flex justify-center w-full px-6 py-3 text-white bg-blue-500 rounded-lg md:w-auto md:mx-2 focus:outline-none"
                                style="background-color: @((selectedRole == "Tenant") ? "rgb(59, 130, 246)" : "white"); color: @((selectedRole == "Tenant") ? "white" : "rgb(59, 130, 246)"); border: 1px solid rgb(59, 130, 246);"
                                @onclick="SelectRoleTenant">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                            </svg>
                            <span class="mx-2">Chcem si prenajať nehnuteľnosť</span>
                        </button>

                        <button type="button"
                                class="flex justify-center w-full px-6 py-3 mt-4 text-blue-500 border border-blue-500 rounded-lg md:mt-0 md:w-auto md:mx-2 dark:border-blue-400 dark:text-blue-400 focus:outline-none"
                                style="background-color: @((selectedRole == "Landlord") ? "rgb(59, 130, 246)" : "white"); color: @((selectedRole == "Landlord") ? "white" : "rgb(59, 130, 246)"); border: 1px solid rgb(59, 130, 246);"
                                @onclick="SelectRoleLandlord">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                            <span class="mx-2">Chcem prenajímať nehnuteľnosť</span>
                        </button>
                    </div>
                </div>


                <EditForm Model="registerModel" OnValidSubmit="HandleRegister" FormName="RegisterForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="grid grid-cols-1 gap-6 mt-8 md:grid-cols-2">
                        <div>
                            <label class="block mb-2 text-sm text-gray-600 dark:text-gray-200">Meno</label>
                            <InputText placeholder="John" class="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border rounded-lg dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 focus:ring focus:ring-blue-300" @bind-Value="registerModel.FirstName" />
                            <ValidationMessage For="() => registerModel.FirstName" />
                        </div>

                        <div>
                            <label class="block mb-2 text-sm text-gray-600 dark:text-gray-200">Priezvisko</label>
                            <InputText placeholder="Doe" class="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border rounded-lg dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 focus:ring focus:ring-blue-300" @bind-Value="registerModel.LastName" />
                            <ValidationMessage For="() => registerModel.LastName" />
                        </div>

                        <div>
                            <label class="block mb-2 text-sm text-gray-600 dark:text-gray-200">Email</label>
                            <InputText placeholder="example@example.com" class="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border rounded-lg dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 focus:ring focus:ring-blue-300" @bind-Value="registerModel.Email" />
                            <ValidationMessage For="() => registerModel.Email" />
                        </div>

                        <div>
                            <label class="block mb-2 text-sm text-gray-600 dark:text-gray-200">Heslo</label>
                            <InputText InputType="password" placeholder="••••••••" class="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border rounded-lg dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 focus:ring focus:ring-blue-300" @bind-Value="registerModel.Password" />
                            <ValidationMessage For="() => registerModel.Password" />
                        </div>

                        <div>
                            <label class="block mb-2 text-sm text-gray-600 dark:text-gray-200">Potvrdenie hesla</label>
                            <InputText InputType="password" placeholder="••••••••" class="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border rounded-lg dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 focus:ring focus:ring-blue-300" @bind-Value="registerModel.ConfirmPassword" />
                            <ValidationMessage For="() => registerModel.ConfirmPassword" />
                        </div>
                    </div>

                    <div class="mt-6">
                        <button type="submit" class="flex items-center justify-between w-full px-6 py-3 text-sm tracking-wide text-white capitalize transition-colors duration-300 transform bg-blue-500 rounded-lg hover:bg-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-50">
                            <span>Zaregistrovať</span>
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 rtl:-scale-x-100" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                </EditForm>

                <p class="mt-6 text-gray-500 dark:text-gray-400">
                    Už máte účet? <a href="/login" class="text-blue-500 hover:underline dark:text-blue-400">Prihlásiť sa</a>
                </p>
            </div>
        </div>
    </div>
</section>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string? errorMessage;
    private string selectedRole = "Tenant";

    private void SelectRoleTenant()
    {
        selectedRole = "Tenant";
    }
    private void SelectRoleLandlord()
    {
        selectedRole = "Landlord";
    }


    private async Task HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            errorMessage = "Heslá sa nezhodujú.";
            return;
        }

        var user = new IdentityUser
            {
                UserName = registerModel.Email,
                Email = registerModel.Email
            };

        // Create user
        var result = await UserManager.CreateAsync(user, registerModel.Password);

        if (result.Succeeded)
        {
            if (!await RoleManager.RoleExistsAsync(selectedRole))
            {
                await RoleManager.CreateAsync(new IdentityRole(selectedRole));
            }

            await UserManager.AddToRoleAsync(user, selectedRole);

            // Add custom claims for first and last name
            await UserManager.AddClaimAsync(user, new System.Security.Claims.Claim("FirstName", registerModel.FirstName));
            await UserManager.AddClaimAsync(user, new System.Security.Claims.Claim("LastName", registerModel.LastName));

            Navigation.NavigateTo("/role-selection");
        }
        else
        {
            errorMessage = string.Join(", ", result.Errors.Select(e => e.Description));
        }
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "Meno je povinné.")]
        public string FirstName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Priezvisko je povinné.")]
        public string LastName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Email je povinný.")]
        [EmailAddress(ErrorMessage = "Zadajte platný email.")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Heslo je povinné.")]
        [MinLength(6, ErrorMessage = "Heslo musí mať aspoň 6 znakov.")]
        public string Password { get; set; } = string.Empty;

        [Required(ErrorMessage = "Potvrdenie hesla je povinné.")]
        [Compare(nameof(Password), ErrorMessage = "Heslá sa musia zhodovať.")]
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}
